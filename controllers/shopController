const Shop = require("./../models/shopModel")

exports.getAllShops = async (req, res) => {
  try {
    const shops = await Shop.find();

    res.status(200).json({
      staus: "success",
      results: shops.length,
      data: {
        shops
      },
    });
  } catch (err) {
    res.status(404).json({
      status: "fail",
      message: err
    });
  }
};

exports.getShop = async (req, res) => {
  try {
    console.log("getShop", req.params.id)
    const shop = await Shop.findById(req.params.id);

    res.status(200).json({
      status: "success",
      message: {
        shop
      }
    });
  } catch (err) {
    res.status(404).json({
      status: "fail",
      message: err
    });
  }
};

exports.getShopByKeyword = async (req, res) => {
  try {
    const keyword = req.params.keyword;
    const shop = await Shop.find({
      $or: [
        { shopname: { $regex: keyword, $options: "i" } }, // case-insensitive
        { region: { $regex: keyword, $options: "i" } },
        { address: { $regex: keyword, $options: "i" } }
      ]
    });

    res.status(200).json({
      status: "success",
      message: {
        shop
      }
    });
  } catch (err) {
    res.status(404).json({
      status: "fail",
      message: err
    });
  }
};

exports.createShop = async (req, res) => {
  try {
    const newShop = await Shop.create(req.body);

    res.status(201).json({
      status: "success",
      data: {
        shop: newShop
      }
    });
  } catch (err) {
    res.status(400).json({
      status: "fail",
      message: err
    });
  }
};

exports.updateShop = async (req, res) => { // http 200 OK
  try {
    const shop = Shop.findByIdAndUpdate(req.params.id, res.body, {
      new: true,
      runValidators: true
    });

    res.status(200).json({
      status: "success",
      data: {
        shop
      }
    });
  } catch (err) {
    res.status(404).json({
      status: "fail",
      message: err
    });
  }
};

exports.deleteShop = async (req, res) => { // http 204 No Content
  try {
    await Shop.findByIdAndDelete(req.params.id);

    res.status(204).json({
      status: "success",
      data: "null"
    });
  } catch (err) {
    res.status(404).json({
      status: "fail",
      message: err
    });
  }
}; 